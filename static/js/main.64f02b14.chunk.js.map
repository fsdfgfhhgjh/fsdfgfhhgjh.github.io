{"version":3,"sources":["panels/Home.js","panels/How.js","panels/Rp.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","align","first_name","size","level","onClick","data-to","href","target","osName","platform","How","props","left","IOS","Rp","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.64f02b14.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>YouTube RP</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"Добро пожаловать,\">\n\t\t\t\t<div align=\"center\">{fetchedUser.first_name}<p>Добро пожаловать</p></div>\n\t\t</Group>}\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"how\">\n\t\t\t\t\tКак начать играть?\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"rp\">\n\t\t\t\t\tТермины\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" href=\"http://youtube-rp.ru/\" target=\"_blank\">\n\t\t\t\t\tСайт\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" href=\"http://youtube-rp.ru/donate\" target=\"_blank\">\n\t\t\t\t\tДонат\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" href=\"http://youtube-rp.ru/forum\" target=\"_blank\">\n\t\t\t\t\tФорум\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" href=\"https://vk.me/youtubrp\" target=\"_blank\">\n\t\t\t\t\tАдминистрация\n\t\t\t\t</Button>\n\t\t\t</Div>\n\n\t\t\t<h5 align=\"center\">V 1.0</h5>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport './How.css';\n\nconst osName = platform();\n\nconst How = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tКак начать играть\n\t\t</PanelHeader>\n\t\t<div align=\"center\">\n\t\t<h4>Тут шо то будет</h4>\n\t\t</div>\n\t</Panel>\n);\n\nHow.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default How;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport './How.css';\n\nconst osName = platform();\n\nconst Rp = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tтермины\n\t\t</PanelHeader>\n\t\t<div align=\"center\">\n\t\t<h4>ДМ- Убийство без причины.<br></br>\nДБ- Убийство с машины (машиной).<br></br><br></br>\nСК- Спавн килл, т.е. убийство при появлении.<br></br><br></br>\nТК- \"Team Kill\" - Убийство своих.<br></br><br></br>\nРП- \"Role Play\"- Игра по ролям где каждый должен соблюдать свою роль.<br></br><br></br>\nМГ- \"Meta Gaming\" - Использование информации из реального мира в игровой<br></br><br></br>\nчат(сокращенно: ООС в ис ).<br></br><br></br>\nГМ- \"God Mood\" - Бог мод - т.е. режим бога.<br></br><br></br>\nПГ- \"Power Gaming\" - Изображение из себя героя,например когда у тебя нет оружия и ты идешь на человека у которого оно есть , или например драка 5 против одного.<br></br><br></br>\nРК- Возвращение на место где тебя убили.<br></br><br></br>\nБХ- \"Бани Хоп\"- нонРП бег с прыжками ( shift+space )<br></br><br></br>\nВсе выше перечисленные выше термины необходимо писать в скобках, пример: (( ДМ- убийство без причины )). На серверах вроде #AdvanceRP , #DiamondRP , #SampRP, такие скобки можно вызвать прописав в чат \"/n\" или \"/m\".<br></br><br></br>\nУК-\"Уголовный Кодекс\"<br></br><br></br>\nАК- \"Академический Кодекс\"<br></br><br></br>\nЗЗ- \"Зеленая Зона\". Общественные места-площадь у мэрии, вокзалы, больницы и т.п. (В этой зоне запрещено стрелять)<br></br><br></br>\n</h4>\n\t\t</div>\n\t</Panel>\n);\n\nRp.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Rp;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n// import ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport How from './panels/How';\nimport Rp from './panels/Rp';\n\nconst App = () => {\n const [activePanel, setActivePanel] = useState('home');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<How id='how' go={go} />\n\t\t\t<Rp id='rp' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n}\n"],"sourceRoot":""}